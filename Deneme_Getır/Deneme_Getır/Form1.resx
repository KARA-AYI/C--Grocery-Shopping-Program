<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        FBAREQBERAEREAREQH//2Q==
</value>
  </data>
</root>